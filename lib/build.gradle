/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3-20211022000247+0000/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    //testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation group: 'com.slack.api', name: 'slack-api-client', version: '1.16.0'

    // Charting api/runtime
    api  group: 'org.jfree', name: 'jfreechart', version: '1.0.17'
// persistence API
    implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.0.0'
    implementation group: 'org.eclipse.persistence', name: 'eclipselink', version: '3.0.2'
// DBMS
    implementation group: 'org.apache.derby', name: 'derby', version: '10.15.2.0'
    implementation group: 'org.apache.derby', name: 'derbyshared', version: '10.15.2.0'
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testCompileOnly 'org.junit.jupiter:junit-jupiter-params:5.3.1'
}
sourceSets  {
    // this may be needed to make entity classes visible to the persistence scanner
    sourceSets.main.output.resourcesDir = sourceSets.main.java.outputDir
}
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveName("badbm.jar")
    // Embed all dependencies to create a "fat jar" as required for AWS deployment.
    // Exclude 3rd-party signing files to prevent security errors at runtime
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
    manifest {
        attributes 'Main-Class': 'edu.touro.mco152.bm.App'
    }
}
//task fatJar(type: Jar) {
//    manifest {
//        attributes 'Main-Class': 'edu.touro.mco152.bm.App'
//    }
//    archiveClassifier = "all"
//    from {
//        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
//    }
//    with jar
//}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
test {
    useJUnitPlatform()
}
